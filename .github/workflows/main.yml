name: Argus
on: [push, pull_request]
jobs:
  build-ubuntu-gcc-debug:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{secrets.ACCESS_TOKEN}}
        submodules: recursive
    - uses: ruby/setup-ruby@v1
      with:
        working-directory: external/tooling/aglet
        ruby-version: '3.0'
        bundler-cache: true
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libgl1-mesa-dev libgl1-mesa-glx libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libvulkan-dev
    - name: Configure
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Debug ..
      env:
        CC: gcc
    - name: Build
      run: cmake --build build --config Debug --parallel 8
    - name: Run Tests
      working-directory: build
      run: ctest -C Debug
    - name: Archive
      uses: actions/upload-artifact@v3
      with:
        name: argus_dist_linux_debug
        path: build/dist/

  build-ubuntu-gcc-release:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{secrets.ACCESS_TOKEN}}
          submodules: recursive
      - uses: ruby/setup-ruby@v1
        with:
          working-directory: external/tooling/aglet
          ruby-version: '3.0'
          bundler-cache: true
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libgl1-mesa-dev libgl1-mesa-glx libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libvulkan-dev
      - name: Configure
        run: | 
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
        env:
          CC: gcc
      - name: Build
        run: cmake --build build --config Release --parallel 8
      - name: Run Tests
        working-directory: build
        run: ctest -C Release
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: argus_dist_linux_release
          path: build/dist/

  build-ubuntu-clang-debug:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{secrets.ACCESS_TOKEN}}
        submodules: recursive
    - uses: ruby/setup-ruby@v1
      with:
        working-directory: external/tooling/aglet
        ruby-version: '3.0'
        bundler-cache: true
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libgl1-mesa-dev libgl1-mesa-glx libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libvulkan-dev
    - name: Configure
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Debug ..
      env:
        CC: clang
        CXX: clang++
    - name: Build
      run: cmake --build build --config Debug --parallel 8
    - name: Run Tests
      working-directory: build
      run: ctest -C Debug
    - name: Archive
      uses: actions/upload-artifact@v3
      with:
        name: argus_dist_linux_debug
        path: build/dist/

  build-ubuntu-clang-release:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{secrets.ACCESS_TOKEN}}
          submodules: recursive
      - uses: ruby/setup-ruby@v1
        with:
          working-directory: external/tooling/aglet
          ruby-version: '3.0'
          bundler-cache: true
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libgl1-mesa-dev libgl1-mesa-glx libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libvulkan-dev
      - name: Configure
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
        env:
          CC: clang
          CXX: clang++
      - name: Build
        run: cmake --build build --config Release --parallel 8
      - name: Run Tests
        working-directory: build
        run: ctest -C Release
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: argus_dist_linux_release
          path: build/dist/

  build-windows-debug:
    runs-on: windows-2022
    env:
      VULKAN_SDK: C:\VulkanSDK\
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{secrets.ACCESS_TOKEN}}
        submodules: recursive
    - uses: ruby/setup-ruby@v1
      with:
        working-directory: external/tooling/aglet
        ruby-version: '3.0'
        bundler-cache: true
    - name: Setup Vulkan SDK
      run: |
        $ver = (Invoke-WebRequest -Uri "https://vulkan.lunarg.com/sdk/latest.json" | ConvertFrom-Json).windows
        echo Version $ver
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/$ver/windows/VulkanSDK-$ver-Installer.exe" -OutFile VulkanSDK.exe
        echo Downloaded
        .\VulkanSDK.exe --root C:\VulkanSDK  --accept-licenses --default-answer --confirm-command install
    - name: Configure
      run: |
        mkdir build
        cd build
        cmake -G "Visual Studio 17" -DCMAKE_SYSTEM_VERSION=10.0.22621.963 -DCMAKE_GENERATOR_PLATFORM=x64 -DCMAKE_BUILD_TYPE=Debug ..
    - name: Build
      run: cmake --build build --config Debug --parallel 8
    - name: Run Tests
      working-directory: build
      run: |
        echo ".\dist\lib" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        ctest -C Debug
    - name: Archive
      uses: actions/upload-artifact@v3
      with:
        name: argus_dist_windows_debug
        path: build/dist/

  build-windows-release:
    runs-on: windows-2022
    env:
      VULKAN_SDK: C:\VulkanSDK\
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{secrets.ACCESS_TOKEN}}
          submodules: recursive
      - uses: ruby/setup-ruby@v1
        with:
          working-directory: external/tooling/aglet
          ruby-version: '3.0'
          bundler-cache: true
      - name: Setup Vulkan SDK
        run: |
          $ver = (Invoke-WebRequest -Uri "https://vulkan.lunarg.com/sdk/latest.json" | ConvertFrom-Json).windows
          echo Version $ver
          $ProgressPreference = 'SilentlyContinue'
          Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/$ver/windows/VulkanSDK-$ver-Installer.exe" -OutFile VulkanSDK.exe
          echo Downloaded
          .\VulkanSDK.exe --root C:\VulkanSDK  --accept-licenses --default-answer --confirm-command install
      - name: Configure
        run: |
          mkdir build
          cd build
          cmake -G "Visual Studio 17" -DCMAKE_SYSTEM_VERSION=10.0.22621.963 -DCMAKE_GENERATOR_PLATFORM=x64 -DCMAKE_BUILD_TYPE=Release ..
      - name: Build
        run: cmake --build build --config Release --parallel 8
      - name: Run Tests
        working-directory: build
        run: |
          echo ".\dist\lib" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          ctest -C Release
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: argus_dist_windows_release
          path: build/dist/
